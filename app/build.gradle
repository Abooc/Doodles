apply plugin: 'com.android.application'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.1"
    defaultConfig {
        applicationId "org.lee.android.doodles"
        minSdkVersion 15
        targetSdkVersion 19
        versionCode 2
        testApplicationId 'org.lee.android.doodles.test'
    }
    signingConfigs {
        release
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }
    }
    productFlavors {
        alpha {
            versionName ("alpha")
            applicationId 'org.lee.android.doodles.alpha'
        }
        beta {
            versionName ("beta")
            applicationId 'org.lee.android.doodles.beta'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:support-v4:22.0.0'
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'com.android.support:cardview-v7:22.0.0'
    compile 'com.android.support:appcompat-v7:22.0.0'
    compile 'com.android.support:recyclerview-v7:22.0.0'
    compile 'com.google.android.gms:play-services:7.0.0'
}

// The next block is for setting the release signing config from a file outside the git repo
// To make release builds work:
// Copy the signing.properties.sample file to ~/.sign/signing.properties and adjust the values.
def Properties props = new Properties()
//def propFile = new File(System.getProperty('user.home'), '.sign/signing.properties')
def propFile = new File(System.getProperty('user.home'), '/Documents/DAYU/keystore/.signingConfigs/[app-dayu-dev]signing.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        System.err.println propFile.toString() + ' found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    System.err.println propFile.toString() + ' not found'
    android.buildTypes.release.signingConfig = null
}
